// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webAPI.Models;

#nullable disable

namespace webAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220524180337_openDB")]
    partial class openDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("webAPI.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("RNE")
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("capitalSociale")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("fax")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("formeJuridique")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("matriculFiscal")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("nbreEmployes")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("produits")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("raisonSociale")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("secteurActivite")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("siegeSociale")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("tel")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("webSite")
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("webAPI.Models.privateMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(2048)");

                    b.Property<bool>("isRead")
                        .HasColumnType("bit");

                    b.Property<int?>("receiverId")
                        .HasColumnType("int");

                    b.Property<int?>("senderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("sendingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("receiverId");

                    b.HasIndex("senderId");

                    b.ToTable("PrivateMessages");
                });

            modelBuilder.Entity("webAPI.Models.publicMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(2048)");

                    b.Property<bool>("isPublished")
                        .HasColumnType("bit");

                    b.Property<string>("publishedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("sendingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PublicMessages");
                });

            modelBuilder.Entity("webAPI.Models.publicMessageResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(2048)");

                    b.Property<bool>("isPublished")
                        .HasColumnType("bit");

                    b.Property<bool>("isRead")
                        .HasColumnType("bit");

                    b.Property<int?>("publicMessageId")
                        .HasColumnType("int");

                    b.Property<string>("publishedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("sendingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("publicMessageId");

                    b.ToTable("PublicMessageResponses");
                });

            modelBuilder.Entity("webAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("fax")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("isAccepted")
                        .HasColumnType("bit");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("isBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("tel")
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("webSite")
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("webAPI.Models.Company", b =>
                {
                    b.HasOne("webAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("webAPI.Models.privateMessage", b =>
                {
                    b.HasOne("webAPI.Models.User", "receiver")
                        .WithMany()
                        .HasForeignKey("receiverId");

                    b.HasOne("webAPI.Models.User", "sender")
                        .WithMany()
                        .HasForeignKey("senderId");

                    b.Navigation("receiver");

                    b.Navigation("sender");
                });

            modelBuilder.Entity("webAPI.Models.publicMessage", b =>
                {
                    b.HasOne("webAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("webAPI.Models.publicMessageResponse", b =>
                {
                    b.HasOne("webAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("webAPI.Models.publicMessage", "publicMessage")
                        .WithMany()
                        .HasForeignKey("publicMessageId");

                    b.Navigation("User");

                    b.Navigation("publicMessage");
                });
#pragma warning restore 612, 618
        }
    }
}
